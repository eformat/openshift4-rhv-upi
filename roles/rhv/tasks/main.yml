---
- name: Authenticate to oVirt
  ovirt_auth:
    username: "{{ rhv_username }}"
    password: "{{ rhv_password }}"
    url: "https://{{ rhv_hostname }}/ovirt-engine/api"
    insecure: True

# - debug: 
#     var: hostvars[item]
#   with_items: "{{ groups[provision_group] }}"

- name: Create VMs
  ovirt_vm:
    auth: "{{ ovirt_auth }}"
    state: stopped
    delete_protected: False
    name: "{{ item }}.{{ base_domain }}"
    cluster: "{{ rhv_cluster }}"
    type: server
    memory: "{{ hostvars[item].memory }}"
    memory_guaranteed: "{{ hostvars[item].memory_guaranteed }}"
    cpu_sockets: "{{ hostvars[item].sockets }}"
    cpu_cores: "{{ hostvars[item].cores }}"
    ballooning_enabled: yes
    #cd_iso: "{{ hostvars[item].iso }}"
    boot_devices:
      - hd
      - network
    placement_policy: user_migratable     
    operating_system: rhel_8x64 
    graphical_console:
      protocol:
        - vnc
  tags:
    - create_vms
  register: ovirt_vm_results
  with_items:
    - "{{ groups[provision_group] }}"

- name: Debug ovirt_vm_results
  debug:
    var: ovirt_vm_results
    verbosity: 2

- name: Get VM Facts
  ovirt_vm_facts:
    auth: "{{ ovirt_auth }}"
    fetch_nested: True
    nested_attributes: True
    pattern: name={{ item }}.{{ base_domain }} and cluster={{ rhv_cluster }}
  with_items:
    - "{{ groups[provision_group] }}"
  register: ovirt_vm_facts_results

- name: Debug ovirt_vm_facts_results
  debug:
    var: ovirt_vm_facts_results
    verbosity: 2

- name: Combine Applicable Disks & Hostnames into Dictionary for Easy Lookup
  set_fact:
    disk_name_dict: >-
      {{
        disk_name_dict | default([]) +
        [
          {
            'name': item,
            'disks': hostvars[item].disks | default([])
          }
        ]
      }}
  tags:
    - disks
  with_items:
    - "{{ groups[provision_group] }}"

- name: Add Disks to VMs
  ovirt_disk:
    auth: "{{ ovirt_auth }}"
    name: "{{ item.0.name }}.{{ base_domain }}-{{ item.1.name }}"
    bootable: "{{ item.1.bootable }}"
    vm_name: "{{ item.0.name }}.{{ base_domain }}"
    size: "{{ item.1.size }}"
    format: "{{ item.1.format }}"
    interface: "{{ item.1.interface }}"
    storage_domain: "{{ item.1.storage_domain }}"
    activate: true
    poll_interval: 5
    sparse: yes
  tags:
    - disks
  with_subelements:
    - "{{ disk_name_dict }}"
    - disks
    - skip_missing: False

- name: Combine Applicable NICs & Hostnames into Dictionary for Easy Lookup
  set_fact:
    nic_name_dict: >-
      {{
        nic_name_dict | default([]) +
        [
          {
            'name': item,
            'nics': hostvars[item].nics | default([])
          }
        ]
      }}
  with_items:
    - "{{ groups[provision_group] }}"

- name: Add NICs to VMs
  ovirt_nic:
    auth: "{{ ovirt_auth }}"
    name: "{{ item.1.name }}"
    interface: "{{ item.1.interface }}"
    network: "{{ item.1.network }}"
    profile: "{{ item.1.network }}"
    mac_address: "{{ item.1.mac_address | default(omit) }}"
    vm: "{{ item.0.name }}.{{ base_domain }}"
  tags:
    - create_nics
  with_subelements:
    - "{{ nic_name_dict }}"
    - nics
    - skip_missing: False

- name: Get VM NIC Facts
  ovirt_nic_facts:
    auth: "{{ ovirt_auth }}"
    name: eth0
    vm: "{{ item }}.{{ base_domain }}"
  register: ovirt_nic_facts_results
  with_items:
    - "{{ groups[provision_group] }}"

- name: Combine Hostname/IP/MAC into Dictionary for Easy Lookup
  set_fact:
    host_mac_list: >-
      {{
        host_mac_list | default([]) +
        [
          {
            'name': item.item,
            'mac': item.ansible_facts.ovirt_nics[0].mac.address,
            'ip': hostvars[item.item]['ip']
          }
        ]
      }}
  with_items:
    - "{{ ovirt_nic_facts_results.results }}"

- name: Debug host_mac_list
  debug:
    var: host_mac_list

- name: Revoke the SSO token
  ovirt_auth:
    state: absent
    ovirt_auth: "{{ ovirt_auth }}"

#- name: Build VM/eth0 Results for DHCP
#  set_fact:
#    host_mac_list: "{{ host_mac_list | default([]) }} + [ '{{ item.item }}.{{ base_domain }} - {{ item.ansible_facts.ovirt_nics[0].mac.address }}' ]"
#  with_items:
#    - "{{ ovirt_nic_facts_results.results }}"

#- name: Show Host MAC List
#  debug:
#    var: host_mac_list
